codes_only <- c('benign', 'sensitive', 'prohibited', 'harmful', 'clickbait')
print(colSums(data_harms[,codes_only]))
sprintf("Deceptive: %i", sum(data_harms['prohibited'] | data_harms['clickbait'] | data_harms['harmful']))
colnames(data_harms)
dislike_deceptive_mlm <- lme4:glmer(scam_dislike ~ prohibited + harmful + clickbait + sensitive + (1|pid),
data=data_harms, family = binomial())
library(dplyr)
library(ggplot2)
library(toffee)
library(lme4)
library(tidyr)
library(xtable)
library(MuMIn)
library(broom)
library(broom.mixed)
make_model_tbl <- function(model){
tidy(model) %>%
mutate(star = ifelse(p.value < 0.05, "*", "")) %>%
mutate(O.R. = exp(estimate)) %>%
mutate(p.value = ifelse(p.value < 0.001, "<0.001", as.character(round(p.value, 3)))) %>%
mutate(p.value = paste0(p.value, star)) %>%
mutate(C.I. = CI_fmt(estimate, std.error)) %>%
dplyr::select(term, O.R., C.I., p.value)
}
dislike_deceptive_mlm <- lme4:glmer(scam_dislike ~ prohibited + harmful + clickbait + sensitive + (1|pid),
data=data_harms, family = binomial())
lme4::glmer
library(lme4)
dislike_deceptive_mlm <- lme4::glmer(scam_dislike ~ prohibited + harmful + clickbait + sensitive + (1|pid),
data=data_harms, family = binomial())
toffee_tbl(dislike_deceptive_mlm)
# TODO: convert this to a categorical model with benign as the reference level
library(dplyr)
library(ggplot2)
library(toffee)
library(lme4)
library(tidyr)
library(xtable)
library(MuMIn)
library(broom)
library(broom.mixed)
make_model_tbl <- function(model){
tidy(model) %>%
mutate(star = ifelse(p.value < 0.05, "*", "")) %>%
mutate(O.R. = exp(estimate)) %>%
mutate(p.value = ifelse(p.value < 0.001, "<0.001", as.character(round(p.value, 3)))) %>%
mutate(p.value = paste0(p.value, star)) %>%
mutate(C.I. = CI_fmt(estimate, std.error)) %>%
dplyr::select(term, O.R., C.I., p.value)
}
data_all <- read.csv('../ad_dislike_data_harms.csv')
# remove ads that are only financial/healthcare etc. related and not deceptive
nonproblematic_other <- data_all$code_other & !(data_all$clickbait | data_all$prohibited | data_all$harmful)
data_harms <- data_all
# data_harms <- data_all[!nonproblematic_other,] %>% select(-code_other)
# note to self: I've double-checked that there were 0 code_other at this point
codes_only <- c('benign', 'sensitive', 'prohibited', 'harmful', 'clickbait', 'code_other')
print(colSums(data_harms[,codes_only]))
sprintf("Deceptive: %i", sum(data_harms['prohibited'] | data_harms['clickbait'] | data_harms['harmful']))
# reference is benign here since it's excluded
dislike_deceptive_mlm <- lme4::glmer(scam_dislike ~ prohibited + harmful + clickbait + sensitive + code_other + (1|pid),
data=data_harms, family = binomial())
toffee_tbl(dislike_deceptive_mlm)
# TODO: convert this to a categorical model with benign as the reference level
dim(data_harms)
colSums(colSums(data_harms[,codes_only]))
colSums(data_harms[,codes_only])
sum(colSums(data_harms[,codes_only]))
# reference is benign here since it's excluded
dislike_deceptive_mlm <- lme4::glmer(scam_dislike ~ prohibited + harmful + clickbait + sensitive + code_other + (1|pid),
data=data_harms, family = binomial())
toffee_tbl(dislike_deceptive_mlm)
# TODO: show R^2 for this model
# NOTE: not converting this to a categorical model because multiple codes can exist at the same time
# our coding isn't necessarily categorical
colnames(data_harms)
data_harms$relevance[c(1,5),]
data_harms$relevance[,c(1,5)]
head(data_harms$relevance)
hist(data_harms$relevance)
head(data_harms)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(xtable)
library(tidyr)
library(broom)
library(ordinal)
library(toffee)
make_model_tbl <- function(model){
tidy(model) %>%
mutate(star = ifelse(p.value < 0.05, "*", "")) %>%
mutate(O.R. = exp(estimate)) %>%
mutate(p.value = ifelse(p.value < 0.001, "<0.001", as.character(round(p.value, 3)))) %>%
mutate(p.value = paste0(p.value, star)) %>%
mutate(C.I. = CI_fmt(estimate, std.error)) %>%
dplyr::select(term, O.R., C.I., p.value)
}
CI_fmt <- Vectorize(function(m, se) {
lower <- round(exp(m - 1.96 * se), 2)
upper <- round(exp(m + 1.96 * se), 2)
paste0("[", lower, ", ", upper, "]")
})
makeCI <- function(model, sigdigits = 2) {
tidy(model) %>%
mutate(CI = CI_fmt(estimate, std.error))
}
data_all <- read.csv('../ad_dislike_data_harms.csv')
data_harms <- data_all
relevance_adtype = clmm(
factor(relevance) ~ prohibited + harmful + clickbait + sensitive + code_other + (1|pid),
data = data_harms)
make_model_tbl(relevance_adtype)
colnames(data_all)
relevance_adtype = clmm(
factor(relevance) ~ prohibited + harmful + clickbait + sensitive + code_other + benign + (1|pid),
data = data_harms)
make_model_tbl(relevance_adtype)
summary(relevance_adtype)
relevance_adtype_int = lme4::glm(
relevance ~ prohibited + harmful + clickbait + sensitive + code_other + (1|pid),
data=data_harms)
relevance_adtype_int = lme4::glmer(
relevance ~ prohibited + harmful + clickbait + sensitive + code_other + (1|pid),
data=data_harms)
make_model_tbl(relevance_adtype_int)
toffee_tbl(relevance_adtype_int)
summary(relevance_adtype_int)
relevance_adtype_int <- lme4::glmer(
relevance ~ prohibited + harmful + clickbait + sensitive + code_other + (1|pid),
data=data_harms)
toffee_tbl(relevance_adtype_int)
make_model_tbl(relevance_adtype_int)
toffee_tbl(relevance_adtype_int)
relevance_adtype_int <- lm(
relevance ~ prohibited + harmful + clickbait + sensitive + code_other + (1|pid),
data=data_harms)
summary(relevance_adtype_int)
relevance_adtype_int <- lme4::glmer(
factor(relevance) ~ prohibited + harmful + clickbait + sensitive + code_other + (1|pid),
data=data_harms)
relevance_adtype_int <- lme4::glmer(
relevance ~ prohibited + harmful + clickbait + sensitive + code_other + (1|pid),
data=data_harms)
relevance_adtype_int <- lme(
relevance ~ prohibited + harmful + clickbait + sensitive + code_other + (1|pid),
data=data_harms)
library(nlme)
relevance_adtype_int <- nlme::lme(
relevance ~ prohibited + harmful + clickbait + sensitive + code_other + (1|pid),
data=data_harms)
toffee_tbl(dislike_deceptive_mlm)
relevance_adtype_clmm = clm(
factor(relevance) ~ prohibited + harmful + clickbait + sensitive + code_other + benign + (1|pid),
data = data_harms)
relevance_adtype_clmm = clmm(
factor(relevance) ~ prohibited + harmful + clickbait + sensitive + code_other + benign + (1|pid),
data = data_harms)
relevance_adtype_clmm = clmm(
factor(relevance) ~ prohibited + harmful + clickbait + sensitive + code_other + benign + (1|pid),
data = data_harms)
make_model_tbl(relevance_adtype_clmm)
make_model_tbl(relevance_adtype_clmm)
make_model_tbl(relevance_adtype_clmm)
data_harms_sensitive_coll <- data_harms %>%
mutate(code_other = as.integer(data_harms$code_other | data_harms$sensitive))
View(data_harms_sensitive_coll)
data_harms_sensitive_coll <- data_harms %>%
mutate(code_other = as.integer(data_harms$code_other | data_harms$sensitive)) %>%
select(-sensitive)
colnames(data_harms_sensitive_coll)
dislike_deceptive_mlm_sensitive_coll <-
lme4::glmer(scam_dislike ~ prohibited + harmful + clickbait + sensitive + code_other + (1|pid), data=data_harms_sensitive_coll, family = binomial())
dislike_deceptive_mlm_sensitive_coll <-
lme4::glmer(scam_dislike ~ prohibited + harmful + clickbait + code_other + (1|pid), data=data_harms_sensitive_coll, family = binomial())
toffee_tbl(dislike_deceptive_mlm_sensitive_coll)
toffee_tbl(dislike_deceptive_mlm_sensitive_coll)
print(r.squaredGLMM(dislike_deceptive_mlm))
r.squaredGLMM(dislike_deceptive_mlm)
data_all <- read.csv('../ad_dislike_data_harms.csv')
# remove ads that are only financial/healthcare etc. related and not deceptive
nonproblematic_other <- data_all$code_other & !(data_all$clickbait | data_all$prohibited | data_all$harmful)
# data_harms <- data_all[!nonproblematic_other,] %>% select(-code_other)
# note to self: I've double-checked that there were 0 code_other at this point
# forget it, not removing anything. including code_other might be important to say
# that scams etc. are disliked more than just healthcare stuff
data_harms <- data_all
codes_only <- c('benign', 'sensitive', 'prohibited', 'harmful', 'clickbait', 'code_other')
print(colSums(data_harms[,codes_only]))
sprintf("Deceptive: %i", sum(data_harms['prohibited'] | data_harms['clickbait'] | data_harms['harmful']))
colSums(data_harms[c('general_dislike', 'general_like'),])
colSums(data_harms[c('general_dislike', 'general_like')])
data_harms[c('general_dislike', 'general_like')]
colSums(data_harms[c('general_dislike', 'general_like')])
colSums(as.int(data_harms[c('general_dislike', 'general_like')]))
data_all <- read.csv('../ad_dislike_data_harms.csv')
# remove ads that are only financial/healthcare etc. related and not deceptive
nonproblematic_other <- data_all$code_other & !(data_all$clickbait | data_all$prohibited | data_all$harmful)
# data_harms <- data_all[!nonproblematic_other,] %>% select(-code_other)
# note to self: I've double-checked that there were 0 code_other at this point
# forget it, not removing anything. including code_other might be important to say
# that scams etc. are disliked more than just healthcare stuff
data_harms <- data_all
codes_only <- c('benign', 'sensitive', 'prohibited', 'harmful', 'clickbait', 'code_other')
print(colSums(data_harms[,codes_only]))
sprintf("Deceptive: %i", sum(data_harms['prohibited'] | data_harms['clickbait'] | data_harms['harmful']))
colSums(data_harms[c('general_dislike', 'general_like')])
dim(data_harms)
2598+4403
data_harms_sensitive_coll <-
data_harms %>%
mutate(code_other = as.integer(data_harms$code_other | data_harms$sensitive)) %>%
select(-sensitive)
dim(subset(data_harms_sensitive_coll, benign == 1 & general_dislike == 1))
benign_only = subset(data_harms_sensitive_coll, benign==1)
colSums(benign_only['general_dislike',])
sum(benign_only['general_dislike',])
head(benign_only[c('general_dislike')])
head(benign_only[c('general_dislike', 'general_like')])
sum(benign_only[,'general_dislike',])
sum(benign_only[,'general_dislike'])
colSums(benign_only[,c('general_dislike', 'general_like')])
sum(benign_only['general_dislike'])
length(benign_only)
size(benign_only)
dim(benign_only)(0)
dim(benign_only)[0]
dim(benign_only)[1]
dim(benign_only)
sum(benign_only['general_dislike']) / dim(benign_only)[1]
colnames(data_harms_sensitive_coll)
benign = subset(data_harms_sensitive_coll, benign == 1)
other = subset(data_harms_sensitive_coll, code_other == 1)
deceptive = subset(data_harms_sensitive_coll, harmful == 1 | prohibited == 1 | clickbait == 1)
sprintf("%i, %i, %i", dim(benign)[1], dim(other)[1], dim(deceptive)[1])
print(colSums(data_harms[,codes_only]))
sprintf("Benign: %i, Deceptive: %i, Other: %i",
dim(benign)[1], dim(deceptive)[1], dim(other)[1])
colnames(benign)
benign = subset(data_harms_sensitive_coll, benign == 1)
other = subset(data_harms_sensitive_coll, code_other == 1)
deceptive = subset(data_harms_sensitive_coll, harmful == 1 | prohibited == 1 | clickbait == 1)
n_benign = dim(benign)[1]
n_deceptive = dim(deceptive)[1]
n_other = dim(other)[1]
sprintf("Benign: %i, Deceptive: %i, Other: %i",
n_benign, n_deceptive, n_other)
benign_disliked = sub(benign, general_dislike == 1)
benign = subset(data_harms_sensitive_coll, benign == 1)
other = subset(data_harms_sensitive_coll, code_other == 1)
deceptive = subset(data_harms_sensitive_coll, harmful == 1 | prohibited == 1 | clickbait == 1)
n_benign = dim(benign)[1]
n_deceptive = dim(deceptive)[1]
n_other = dim(other)[1]
sprintf("Benign: %i, Deceptive: %i, Other: %i",
n_benign, n_deceptive, n_other)
benign_disliked = subset(benign, general_dislike == 1)
deceptive_disliked = subset(deceptive, general_dislike == 1)
other_disliked = subset(other, general_dislike == 1)
prop.test(c(benign_disliked, deceptive_disliked, other_disliked),
c(n_benign, n_deceptive, n_other))
benign = subset(data_harms_sensitive_coll, benign == 1)
other = subset(data_harms_sensitive_coll, code_other == 1)
deceptive = subset(data_harms_sensitive_coll, harmful == 1 | prohibited == 1 | clickbait == 1)
n_benign = dim(benign)[1]
n_deceptive = dim(deceptive)[1]
n_other = dim(other)[1]
sprintf("Benign: %i, Deceptive: %i, Other: %i",
n_benign, n_deceptive, n_other)
benign_disliked = dim(subset(benign, general_dislike == 1))[1]
deceptive_disliked = dim(subset(deceptive, general_dislike == 1))[1]
other_disliked = dim(subset(other, general_dislike == 1))[1]
prop.test(c(benign_disliked, deceptive_disliked, other_disliked),
c(n_benign, n_deceptive, n_other))
prop.test(c(benign_disliked, deceptive_disliked),
c(n_benign, n_deceptive))
# deceptive vs. other
prop.test(c(other_disliked, deceptive_disliked),
c(other_disliked, n_deceptive))
prop.test(c(other_disliked, deceptive_disliked),
c(n_other, n_deceptive))
# pairwise tests: deceptive vs. benign
prop.test(c(benign_disliked, deceptive_disliked),
c(n_benign, n_deceptive))
# deceptive vs. other
prop.test(c(other_disliked, deceptive_disliked),
c(n_other, n_deceptive))
colnames(other_disliked)
colnames(deceptive)
prop.test(c(benign_liked, deceptive_liked, other_liked),
c(n_benign, n_deceptive, n_other))
benign_liked = dim(subset(benign, general_like == 1))[1]
deceptive_liked = dim(subset(deceptive, general_like == 1))[1]
other_liked = dim(subset(other, general_like == 1))[1]
prop.test(c(benign_liked, deceptive_liked, other_liked),
c(n_benign, n_deceptive, n_other))
prop.test(c(benign_liked, deceptive_liked),
c(n_benign, n_deceptive))
# other vs. deceptive
prop.test(c(other_liked, deceptive_liked),
c(n_other, n_deceptive))
benign = subset(data_harms_sensitive_coll, benign == 1)
other = subset(data_harms_sensitive_coll, code_other == 1)
deceptive = subset(data_harms_sensitive_coll, harmful == 1 | prohibited == 1 | clickbait == 1)
n_benign = dim(benign)[1]
n_deceptive = dim(deceptive)[1]
n_other = dim(other)[1]
sprintf("Benign: %i, Deceptive: %i, Other: %i",
n_benign, n_deceptive, n_other)
benign_disliked = dim(subset(benign, general_dislike == 1))[1]
deceptive_disliked = dim(subset(deceptive, general_dislike == 1))[1]
other_disliked = dim(subset(other, general_dislike == 1))[1]
benign_liked = dim(subset(benign, general_like == 1))[1]
deceptive_liked = dim(subset(deceptive, general_like == 1))[1]
other_liked = dim(subset(other, general_like == 1))[1]
# ==== step 1: compare dislike proportions ====
# omnibus test: SIGNIFICANT
# X-squared = 108.55, df = 2, p-value < 2.2e-16
prop.test(c(benign_disliked, deceptive_disliked, other_disliked),
c(n_benign, n_deceptive, n_other))
# pairwise tests: deceptive vs. benign: SIGNIFICANT
# X-squared = 102.73, df = 1, p-value < 2.2e-16
prop.test(c(benign_disliked, deceptive_disliked),
c(n_benign, n_deceptive))
# deceptive vs. other: SIGNIFICANT
# X-squared = 45.947, df = 1, p-value = 1.215e-11
prop.test(c(other_disliked, deceptive_disliked),
c(n_other, n_deceptive))
# ==== step 2: compare like proportions ====
# omnibus test: SIGNIFICANT
# X-squared = 101.16, df = 2, p-value < 2.2e-16
prop.test(c(benign_liked, deceptive_liked, other_liked),
c(n_benign, n_deceptive, n_other))
# pairwise tests: deceptive vs. benign: SIGNIFICANT
# X-squared = 92.226, df = 1, p-value < 2.2e-16
prop.test(c(benign_liked, deceptive_liked),
c(n_benign, n_deceptive))
# other vs. deceptive: SIGNIFICANT
# X-squared = 39.891, df = 1, p-value = 2.685e-10
prop.test(c(other_liked, deceptive_liked),
c(n_other, n_deceptive))
toffee_tbl(dislike_deceptive_mlm)
toffee_tbl(dislike_deceptive_mlm_sensitive_coll)
df <- readxl::read_excel('recruitmentFULL_updated0408.xlsx',
sheet='recruitmentFULL_updated0224')
library(readxl)
library(dplyr)
library(tidyr)
df <- readxl::read_excel('recruitmentFULL_updated0408.xlsx',
sheet='recruitmentFULL_updated0224')
toffee_tbl(dislike_deceptive_mlm)
toffee_tbl(dislike_deceptive_mlm_sensitive_coll)
data_all <- read.csv('../ad_dislike_data.csv')
colnames(data_all)
undesirable_general_dislike <- lme4::glmer(
general_dislike ~ opportunity + healthcare + sensitive + financial + prohibited + harmful +
+ clickbait + political + (1|pid), data=data_all, family=binomial()
)
toffee_tbl(undesirable_general_dislike)
head(data_all['any_dislike_reason',])
head(data_all[,'any_dislike_reason'])
undesirable_dislike_reasons <- lme4::glmer(
any_dislike_reason ~ opportunity + healthcare + sensitive + financial + prohibited + harmful +
+ clickbait + political + (1|pid), data=data_all, family=binomial()
)
toffee_tbl(undesirable_dislike_reasons)
undesirable_scam_dislike <- lme4::glmer(
scam_dislike ~opportunity + healthcare + sensitive + financial + prohibited + harmful +
+ clickbait + political + (1|pid), data=data_all, family=binomial()
)
toffee_tbl(undesirable_scam_dislike)
toffee_tbl(undesirable_general_dislike)
toffee_tbl(undesirable_dislike_reasons)
toffee_tbl(undesirable_scam_dislike)
undesirable_scam_dislike_exp <- lme4::glmer(
scam_dislike_exp ~ opportunity + healthcare + sensitive + financial + prohibited + harmful +
+ clickbait + political + (1|pid), data=data_all, family=binomial()
)
data_all <- read.csv('../ad_dislike_data.csv')
undesirable_scam_dislike_exp <- lme4::glmer(
scam_dislike_exp ~ opportunity + healthcare + sensitive + financial + prohibited + harmful +
+ clickbait + political + (1|pid), data=data_all, family=binomial()
)
toffee_tbl(undesirable_scam_dislike_exp)
toffee_tbl(undesirable_scam_dislike_exp)
sum(data_all[,'scam_dislike_exp'])
sum(data_all[,'scam_dislike'])
data_all <- read.csv('../ad_dislike_data.csv')
undesirable_scam_dislike_exp <- lme4::glmer(
scam_dislike_exp ~ opportunity + healthcare + sensitive + financial + prohibited + harmful + clickbait + political + (1|pid), data=data_all, family=binomial()
)
toffee_tbl(undesirable_scam_dislike_exp)
toffee_tbl(undesirable_scam_dislike_exp)
data_full_reasons <- read.csv("../ad_dislike_data_full.csv")
View(data_full_reasons)
colSums(data_full_reasons[,codes_only])
codes_only
colSums(data_full_reasons[codes_only,])
data_full_reasons[,codes_only]
colnames(data_full_reasons)
opportunity_dislike <- glmer(
opportunity ~ unclear + irrelevant + pushy + dislike_clickbait + scam + dislike_product + dislike_design + uncomfortable + dislike_advertiser + dislike_political + (1|pid), data=data_full_reasons, family=binomial()
)
toffee_tbl(opportunity_dislike)
healthcare_dislike <- glmer(
healthcare ~ unclear + irrelevant + pushy + dislike_clickbait + scam + dislike_product + dislike_design + uncomfortable + dislike_advertiser + dislike_political + (1|pid), data=data_full_reasons, family=binomial()
)
toffee_tbl(healthcare_dislike)
# which reasons for disliking are most strongly associated with a code?
# regress on code ~ reason_1 + reason_2 + ... to find out
data_full_reasons <- read.csv("../ad_dislike_data_full.csv")
# which reasons are most common for disliking opportunity ads?
opportunity_dislike <- glmer(
opportunity ~ unclear + irrelevant + pushy + dislike_clickbait + scam + dislike_product + dislike_design + uncomfortable + dislike_advertiser + dislike_political + (1|pid), data=data_full_reasons, family=binomial()
)
toffee_tbl(opportunity_dislike)
## survey_codelist = ["Opportunity", "Healthcare", "Sensitive", "Financial", "Potentially Prohibited",
## "Potentially Harmful", "Clickbait", "Political"]
# healthcare
healthcare_dislike <- glmer(
healthcare ~ unclear + irrelevant + pushy + dislike_clickbait + scam + dislike_product + dislike_design + uncomfortable + dislike_advertiser + dislike_political + (1|pid), data=data_full_reasons, family=binomial()
)
toffee_tbl(healthcare_dislike)
# sensitive
sensitive_dislike <- glmer(
sensitive ~ unclear + irrelevant + pushy + dislike_clickbait + scam + dislike_product + dislike_design + uncomfortable + dislike_advertiser + dislike_political + (1|pid), data=data_full_reasons, family=binomial()
)
toffee_tbl(sensitive_dislike)
# TODO: financial
financial_dislike <- glmer(
financial ~ unclear + irrelevant + pushy + dislike_clickbait + scam + dislike_product + dislike_design + uncomfortable + dislike_advertiser + dislike_political + (1|pid), data=data_full_reasons, family=binomial()
)
toffee_tbl(financial_dislike)
# prohibited
prohibited_dislike <- glmer(
prohibited ~ unclear + irrelevant + pushy + dislike_clickbait + scam + dislike_product + dislike_design + uncomfortable + dislike_advertiser + dislike_political + (1|pid), data=data_full_reasons, family=binomial()
)
toffee_tbl(prohibited_dislike)
# harmful
harmful_dislike <- glmer(
harmful ~ unclear + irrelevant + pushy + dislike_clickbait + scam + dislike_product + dislike_design + uncomfortable + dislike_advertiser + dislike_political + (1|pid), data=data_full_reasons, family=binomial()
)
toffee_tbl(harmful_dislike)
# clickbait
clickbait_dislike <- glmer(
clickbait ~ unclear + irrelevant + pushy + dislike_clickbait + scam + dislike_product + dislike_design + uncomfortable + dislike_advertiser + dislike_political + (1|pid), data=data_full_reasons, family=binomial()
)
toffee_tbl(clickbait_dislike)
# political, whatever, too few of these in the data
library(dplyr)
library(ggplot2)
library(toffee)
library(lme4)
library(dplyr)
library(ggplot2)
library(toffee)
#library(lme4)
library(tidyr)
library(xtable)
library(MuMIn)
library(dplyr)
library(ggplot2)
library(toffee)
#library(lme4)
library(tidyr)
library(xtable)
#library(MuMIn)
library(broom)
library(broom.mixed)
library(dplyr)
library(ggplot2)
library(toffee)
#library(lme4)
library(tidyr)
library(xtable)
#library(MuMIn)
library(broom)
#library(broom.mixed)
make_model_tbl <- function(model){
tidy(model) %>%
mutate(star = ifelse(p.value < 0.05, "*", "")) %>%
mutate(O.R. = exp(estimate)) %>%
mutate(p.value = ifelse(p.value < 0.001, "<0.001", as.character(round(p.value, 3)))) %>%
mutate(p.value = paste0(p.value, star)) %>%
mutate(C.I. = CI_fmt(estimate, std.error)) %>%
dplyr::select(term, O.R., C.I., p.value)
}
dislike_data <- read.csv('../ad_dislike_data_full.csv') %>%
mutate(problematic = as.integer(deceptive | prohibited | clickbait | financial | sensitive)) %>%
filter(dislike_general == 1)
# NOTE: I have a feeling that this is wrong because it's not directly comparing against neutral
# healthcare + opportunity are also in the DF, there should be some kind of relevel to compare directly -- but don't know how to do it
model.omnibus <- lme4::glmer(problematic ~ dislike_irrelevant + dislike_clickbait + dislike_product +
dislike_uncomfortable + dislike_political + dislike_unclear + dislike_pushy + dislike_scam +
dislike_design + dislike_advertiser + (1|pid), family=binomial(), data=dislike_data)
# NOTE: I have a feeling that this is wrong because it's not directly comparing against neutral
# healthcare + opportunity are also in the DF, there should be some kind of relevel to compare directly -- but don't know how to do it
model.omnibus <- glm(problematic ~ dislike_irrelevant + dislike_clickbait + dislike_product +
dislike_uncomfortable + dislike_political + dislike_unclear + dislike_pushy + dislike_scam +
dislike_design + dislike_advertiser + (1|pid), family=binomial(), data=dislike_data)
install.packages(lme4)
install.packages("lme4")
library(dplyr)
library(ggplot2)
library(toffee)
library(lme4)
library(dplyr)
library(ggplot2)
library(toffee)
library(lme4)
require(lme4)
install.packages("lme4")
install.packages("nloptr")
